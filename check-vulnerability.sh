#!/bin/bash
# Author: Sushant Chawla
# Description: Script to check vulnerabilities in WordPress site

TIMEOUT="/usr/bin/timeout 15"
COLORCODE_CYAN="\e[36m"
COLORCODE_RED="\e[31m"

# Initialize WP-CLI
if [ "$(id -u)" -eq 0 ]; then
    WP="/usr/local/bin/wp --allow-root --skip-themes --skip-plugins"
else
    WP="/usr/local/bin/wp --skip-themes --skip-plugins"
fi

PLUGIN_COUNT=$(${TIMEOUT} ${WP} plugin list --format=count)
THEME_COUNT=$(${TIMEOUT} ${WP} theme list --format=count)

# Function to fetch vulnerability data from WP Vulnerability API
check_vulnerability() {
  slug=$1
  installed_version=$2
  type=$3
  api_url="https://www.wpvulnerability.net/$type/$slug/"

  # Fetch vulnerability details from API
  response=$(curl -s "$api_url")

  # Validate JSON response
  if ! echo "$response" | jq . > /dev/null 2>&1; then
    echo "Error: Invalid JSON response for $slug. Skipping..."
    return
  fi

  # Check for error in the response
  error=$(echo "$response" | jq -r '.error')
  if [[ "$error" != "0" ]]; then
    echo "Error: API returned an error for $slug. Skipping..."
    return
  fi

  # Check if vulnerability data exists
  vulnerabilities=$(echo "$response" | jq -r '.data.vulnerability')
  if [[ "$vulnerabilities" == "null" ]]; then
    # Skip items with no vulnerabilities
    return
  fi

  # Process vulnerabilities
  echo "$response" | jq -c '.data.vulnerability[]' | while read -r vulnerability; do
    max_version=$(echo "$vulnerability" | jq -r '.operator.max_version')
    max_operator=$(echo "$vulnerability" | jq -r '.operator.max_operator')

    if [[ -n "$max_version" && -n "$max_operator" ]]; then
      # Correctly evaluate the version comparison
      ${WP} eval "
      if (version_compare('$installed_version', '$max_version', '$max_operator')) {
          exit(1);
      } else {
          exit(0);
      }" > /dev/null 2>&1

      if [[ $? -eq 1 ]]; then
        echo -e "${COLORCODE_RED}Alert: Vulnerable $type detected: $slug ($installed_version). Vulnerable up to $max_operator $max_version. Check $api_url for more details.\e[0m"
      fi
    fi
  done
}

# Check Plugins for Vulnerabilities
plugins=$(${TIMEOUT} ${WP} plugin list --fields=name,version --format=csv | grep -v hello | grep -v advanced-cache.php | grep -v object-cache.php | grep -v object-cache-pro | tail -n +2)

echo -e ""
echo -e "${COLORCODE_CYAN}== Number of plugins installed on this site: ${PLUGIN_COUNT}, checking plugins for vulnerabilities. This may take some time...\e[0m"
while IFS=',' read -r plugin_name plugin_version; do
  echo "Checking plugin $plugin_name $plugin_version"
  check_vulnerability "$plugin_name" "$plugin_version" "plugin"
done <<< "$plugins"

# Check Themes for Vulnerabilities
themes=$(${TIMEOUT} ${WP} theme list --fields=name,version --format=csv | tail -n +2)

echo -e ""
echo -e "${COLORCODE_CYAN}== Number of themes installed on this site: ${THEME_COUNT}, checking themes for vulnerabilities. This may take some time...\e[0m"
while IFS=',' read -r theme_name theme_version; do
  echo "Checking theme $theme_name $theme_version"
  check_vulnerability "$theme_name" "$theme_version" "theme"
done <<< "$themes"

echo -e "${COLORCODE_CYAN}== Vulnerability check complete ==\e[0m"
